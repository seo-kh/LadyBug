//
//  LadyBugScene.swift
//  LadyBug
//
//  Created by hailey macbook on 2023/01/23.
//

import SpriteKit
import GameplayKit

final class LadyBugScene: SKScene, SKPhysicsContactDelegate {
    
    private var ladyBug: SKSpriteNode?
    private var blocks: [SKSpriteNode]?
    private var lifes: [SKSpriteNode]?
    private var isContact = false
    private var pivotPoint: CGPoint = .zero
    
    override func sceneDidLoad() {
        ladyBug = childNode(withName: "ladyBug") as? SKSpriteNode
//        blocks = (0 ..< 5).map(generateBlock)
        lifes = self["life"] as? [SKSpriteNode]

        self.physicsWorld.contactDelegate = self
        
    }
    
    /// Ï†ëÏ¥âÏù¥ Î∞úÏÉùÌïòÎ©¥, ÏõÄÏßÅÏûÑÏù¥ ÏóÜÏùå.
    override func touchesMoved(_ touches: Set<UITouch>, with event: UIEvent?) {
        guard !isContact else { return }
        
        for t in touches {
            let position = t.location(in: self)
            /// bug's position
            ladyBug?.position = position
            /// bug's zRotaion
            /// 1. zRotationÏùÄ radian Îã®ÏúÑÎã§. Í∏∞Ï§ÄÏùÄ +xÏ∂ïÏù¥Îã§.
            /// ladyBug?.zRotation = atan(position.y / position.x)
            /// 2. bugÎäî +yÏ∂ï Í∏∞Ï§ÄÏóêÏÑú ÌöåÏ†ÑÌïúÎã§. Ï¶â, zRotationÏù¥ 30Àô ÎèÑ Î≥ÄÌïòÎ©¥, bugÎäî Ïã§Ï†ú (90+30)ÀöÎ°ú Î≥ÄÌïúÎã§. (Ïù¥Í≤ÉÏùÄ Ïö∞Î¶¨Í∞Ä ÏõêÌïòÎäî Î∞©Ìñ•Ïù¥ ÏïÑÎãàÎã§.!)
            /// ùõ≥ = 0ÀöÎ©¥, bugÎäî Ïã§Ï†ú -90Àö Ïó¨ÏïºÌïúÎã§. ùõ≥ = 90ÀöÎ©¥, bugÎäî Ïã§Ï†ú 0ÀöÏó¨ÏïºÌïúÎã§.
            /// swiftÏóêÏÑú Ï†úÍ≥µÌïòÎäî `atan`ÏùÄ ÏñëÏàòÍ∞íÎßå Ï†úÍ≥µÌïòÏßÄÏïäÎäîÎã§. 4Î∂ÑÎ©¥ÎßàÎã§ Í∞ÅÎèÑÍ∞Ä Îã§Î•¥Îã§.
            /// Ï¶â, Ïù¥Î•º Î≥¥Ï†ïÌïòÍ∏∞ÏúÑÌïú Í∏∞Ï§ÄÏùÄ xÍ∞íÏùò +/- Ïó¨Î∂ÄÎã§. Ïù¥ Í∏∞Ï§ÄÏóê Îî∞Îùº 90Àö, -90Àö Î≥¥Ï†ïÍ∞íÏùÑ Ï∂îÍ∞ÄÌïòÎ©¥ ÎêúÎã§.
            /// ùõ≥ = atan(y/x) - œÄ / 2 , where x > 0
            /// ùõ≥ = atan(y/x) + œÄ / 2 , where x <0
            /// switch position.x {
            /// case let x where x > 0:
            ///     ladyBug?.zRotation = atan(position.y / position.x) - (.pi / 2.0)
            /// case let x where x <= 0:
            ///     ladyBug?.zRotation = atan(position.y / position.x) + (.pi / 2.0)
            /// default:
            ///     break
            /// }
            /// 3. ÎßàÏö∞Ïä§Ïª§ÏÑúÏóê Îî∞Îùº ÌöåÏ†ÑÏù¥ Ï¶âÍ∞ÅÏ†ÅÏúºÎ°ú Î≥ÄÌñàÏúºÎ©¥ Ï¢ãÍ≤†Îã§. piviotPointÎ•º ÎßåÎì§Ïñ¥ÏÑú ÏóÖÎç∞Ïù¥Ìä∏ÌïòÏûê.
            /// let deltaX = position.x - pivotPoint.x
            /// let deltaY = position.y - pivotPoint.y
            /// switch deltaX {
            /// case let x where x > 0:
            ///     ladyBug?.zRotation = atan(deltaY / deltaX) - (.pi / 2.0)
            /// case let x where x <= 0:
            ///     ladyBug?.zRotation = atan(deltaY / deltaX) + (.pi / 2.0)
            /// default:
            ///     break
            /// }
            /// 4. FPS 60Ïù¥Îùº, Í≥ÑÏÇ∞Ïù¥ ÎÑàÎ¨¥ Ïû¶Îã§. Ï°∞Í∏àÎßå ÏõÄÏßÅÏó¨ÎèÑ bugÏùò ÏõÄÏßÅÏûÑÏù¥ ÎÑàÎ¨¥ Ïû¶Îã§.
            ///     - Ïù¥Î•º Î≥¥Ï†ïÌïòÍ∏∞ÏúÑÌï¥,  `treshold`Í∞íÏùÑ Ïù¥Ïö©Ìï¥ ÏûëÏùÄ `delta`Í∞íÏùÄ Î¨¥Ïãú.
            let deltaX = position.x - pivotPoint.x
            let deltaY = position.y - pivotPoint.y
            let treshold = 1.0
            switch (deltaX, deltaY) {
            case let (x, y) where x > treshold && abs(y) > treshold:
                ladyBug?.zRotation = atan(y / x) - (.pi / 2.0)
            case let (x, y) where x <= -treshold && abs(y) > treshold:
                ladyBug?.zRotation = atan(y / x) + (.pi / 2.0)
            default:
                break
            }
            
            
        }
    }
    
    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        guard !(lifes?.isEmpty ?? false) else { return }
        
        if isContact {
            blocks?.forEach { $0.removeFromParent() }
            ladyBug?.position = CGPoint(x: 0, y: 0)
            if let life = lifes?.removeLast() { life.alpha = 0 }
            blocks = (0..<5).map(generateBlock)
            isContact = false
        } else {
            for t in touches {
                ladyBug?.position = t.location(in: self)
            }
        }
    }
    
}

extension LadyBugScene {
    func didBegin(_ contact: SKPhysicsContact) {
        isContact = true
        blocks?.forEach { $0.removeAllActions() }
    }
    
    private func generateBlock<T>(_ element: T) -> SKSpriteNode {
        let block = SKSpriteNode(imageNamed: "block")
        block.setScale(0.3)
        block.physicsBody = SKPhysicsBody(rectangleOf: block.size)
        block.physicsBody?.categoryBitMask = 1
        block.physicsBody?.affectedByGravity = false
        block.physicsBody?.allowsRotation = false
        block.physicsBody?.isDynamic = false
        block.physicsBody?.pinned = false
        block.position = CGPoint(x: .randomX, y: .randomY)
        self.generateMove(block)
        self.addChild(block)
        return block
    }
    
    private func generateMove(_ block: SKSpriteNode) {
        let move = SKAction.move(
            to: .init(x: CGFloat.randomPosition.x,
                      y: CGFloat.randomPosition.y),
            duration: 10
        )
        block.run(move)
    }
}

extension CGFloat {
    static var randomPosition: (x: CGFloat, y: CGFloat) {
        let theta = .pi * .random(in: 0.0 ..< 2.0)
        let x = 1000.0 * cos(theta)
        let y = 1000.0 * sin(theta)
        return (x, y)
    }
    
    /// blockÏù¥ Ï¢åÏö∞Î•º ÎÑòÏßÄÏïäÏúºÎ©¥ÏÑú, ladyBugÎ•º Ïπ®Î≤îÌïòÏßÄÏïäÎäî ÏµúÏÜå x Î≤îÏúÑ
    static var randomX: CGFloat {
        self.random(in: (-4.0 ..< -3.0)) * [-1.0, 1.0].randomElement()! * 64.0
    }
    /// blockÏù¥ ÏÉÅÌïòÎ•º ÎÑòÏßÄÏïäÏúºÎ©¥ÏÑú, lifeÎ•º ÎÑòÏßÄÏïäÏúºÎ©¥ÏÑú, ladyBugÎ•º Ïπ®Î≤îÌïòÏßÄÏïäÎäî ÏµúÏÜå y Î≤îÏúÑ
    static var randomY: CGFloat {
        self.random(in: (-8.0 ..< -6.0)) * [-1.0, 1.0].randomElement()! * 64.0
    }
}
